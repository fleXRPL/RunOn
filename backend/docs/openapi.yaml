openapi: 3.1.0
info:
  title: RunOn! API
  version: 1.0.0
  description: |
    API documentation for RunOn! running event discovery platform.
    
    This API provides endpoints for:
    - User authentication and management
    - Event discovery and search
    - Calendar synchronization
    - Profile management
  
servers:
  - url: https://api.runon.app/v1
    description: Production server
  - url: https://staging.runon.app/v1
    description: Staging server

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Event:
      type: object
      properties:
        id:
          type: string
          description: Unique event identifier
        title:
          type: string
          description: Event title
        description:
          type: string
          description: Event description
        date:
          type: string
          format: date-time
          description: Event date and time
        location:
          type: object
          properties:
            address:
              type: string
            coordinates:
              type: object
              properties:
                lat:
                  type: number
                  format: float
                lng:
                  type: number
                  format: float
        distance:
          type: number
          format: float
          description: Event distance in kilometers
        event_type:
          type: string
          enum: [marathon, half_marathon, 10k, 5k, trail, other]
        organizer_id:
          type: string
        max_participants:
          type: integer
          nullable: true
        current_participants:
          type: integer
          default: 0
        status:
          type: string
          enum: [scheduled, cancelled, completed]
          default: scheduled
        tags:
          type: array
          items:
            type: string

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        provider:
          type: string
          enum: [google, apple]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        preferences:
          type: object
          additionalProperties: true
        profile_picture:
          type: string
          nullable: true

paths:
  /auth/login:
    post:
      summary: Authenticate user
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                provider:
                  type: string
                  enum: [google, apple]
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'

  /events:
    get:
      summary: List running events
      operationId: listEvents
      parameters:
        - name: location
          in: query
          description: Location to search for events
          required: true
          schema:
            type: string
        - name: radius
          in: query
          description: Search radius in kilometers
          schema:
            type: integer
            default: 50
        - name: event_type
          in: query
          schema:
            type: string
            enum: [marathon, half_marathon, 10k, 5k, trail, other]
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                  metadata:
                    type: object
                    properties:
                      total:
                        type: integer
                      location:
                        type: string
                      radius:
                        type: integer

  /calendar/sync:
    post:
      summary: Synchronize calendar events
      operationId: syncCalendar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum: [add, remove, list]
                event_data:
                  type: object
                  properties:
                    id:
                      type: string
                    calendar_id:
                      type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'

  /users/profile:
    get:
      summary: Get user profile
      operationId: getUserProfile
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    
    put:
      summary: Update user profile
      operationId: updateUserProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                preferences:
                  type: object
                profile_picture:
                  type: string
      responses:
        '200':
          description: Updated profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User' 